apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: jenkins
  namespace: jenkins
  labels:
    app: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: jenkins
    spec:
      volumes:
        - name: plugins
          emptyDir: {}
        - name: jenkins-config
          configMap:
            name: jenkins
            defaultMode: 420
        - name: plugin-dir
          emptyDir: {}
        - name: jenkins-cache
          emptyDir: {}
        - name: jenkins-home
          persistentVolumeClaim:
            claimName: jenkins
        - name: sc-config-volume
          emptyDir: {}
        - name: tmp-volume
          emptyDir: {}
        - name: admin-secret
          secret:
            secretName: jenkins
            defaultMode: 420
      initContainers:
        - name: init
          image: gcr.io/pasha-testproject-12345/jenkins
          command:
            - sh
            - /var/jenkins_config/apply_config.sh
          resources:
            limits:
              cpu: '1'
              memory: 1Gi
            requests:
              cpu: 500m
              memory: 500Mi
          volumeMounts:
            - name: jenkins-home
              mountPath: /var/jenkins_home
            - name: jenkins-config
              mountPath: /var/jenkins_config
            - name: plugins
              mountPath: /usr/share/jenkins/ref/plugins
            - name: plugin-dir
              mountPath: /var/jenkins_plugins
            - name: tmp-volume
              mountPath: /tmp
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: false
            allowPrivilegeEscalation: false
      containers:
        - name: jenkins
          image: gcr.io/pasha-testproject-12345/jenkins
          args:
            - '--httpPort=8080'
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: agent-listener
              containerPort: 50000
              protocol: TCP
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: JAVA_OPTS
              value: '-Dcasc.reload.token=$(POD_NAME) -Xms3500m -Xmx3500m'
            - name: JENKINS_OPTS
              value: '--webroot=/var/jenkins_cache/war '
            - name: JENKINS_SLAVE_AGENT_PORT
              value: '50000'
            - name: CASC_JENKINS_CONFIG
              value: /var/jenkins_home/casc_configs
          resources:
            limits:
              cpu: '1'
              memory: 3500Mi
            requests:
              cpu: 250m
              memory: 1Gi
          volumeMounts:
            - name: jenkins-home
              mountPath: /var/jenkins_home
            - name: jenkins-config
              readOnly: true
              mountPath: /var/jenkins_config
            - name: plugin-dir
              mountPath: /usr/share/jenkins/ref/plugins/
            - name: sc-config-volume
              mountPath: /var/jenkins_home/casc_configs
            - name: admin-secret
              readOnly: true
              mountPath: /run/secrets/chart-admin-username
              subPath: jenkins-admin-user
            - name: admin-secret
              readOnly: true
              mountPath: /run/secrets/chart-admin-password
              subPath: jenkins-admin-password
            - name: jenkins-cache
              mountPath: /var/jenkins_cache
            - name: tmp-volume
              mountPath: /tmp
          livenessProbe:
            httpGet:
              path: /login
              port: http
              scheme: HTTP
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /login
              port: http
              scheme: HTTP
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /login
              port: http
              scheme: HTTP
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 12
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
        - name: config-reload
          image: kiwigrid/k8s-sidecar:1.14.2
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: LABEL
              value: jenkins-jenkins-config
            - name: FOLDER
              value: /var/jenkins_home/casc_configs
            - name: NAMESPACE
              value: jenkins
            - name: REQ_URL
              value: >-
                http://localhost:8080/reload-configuration-as-code/?casc-reload-token=$(POD_NAME)
            - name: REQ_METHOD
              value: POST
            - name: REQ_RETRY_CONNECT
              value: '10'
          resources: {}
          volumeMounts:
            - name: sc-config-volume
              mountPath: /var/jenkins_home/casc_configs
            - name: jenkins-home
              mountPath: /var/jenkins_home
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
          securityContext:
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      serviceAccountName: cd-jenkins
      serviceAccount: cd-jenkins
      securityContext:
        runAsUser: 1000
        runAsNonRoot: true
        fsGroup: 1000
      schedulerName: default-scheduler
  serviceName: jenkins
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: 0
  revisionHistoryLimit: 10
